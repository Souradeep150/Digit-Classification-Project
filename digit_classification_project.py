# -*- coding: utf-8 -*-
"""Digit_Classification_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yOOfF9k5GYqbnzDc-FsVfCAKjDIX_COF
"""

!pip install numpy
!pip install tensorflow
!pip install keras
!pip install pillow

"""

1.   Importing libraries
2.   Loading the data
3.   Image Processing
4.   Building the neural network
5.   Training the model
6.   Evaluating the results


"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import cv2
from google.colab.patches import cv2_imshow
from PIL import Image
import tensorflow as tf
tf.random.set_seed(3)
from tensorflow import keras
from keras.datasets import mnist
from tensorflow.math import confusion_matrix

(X_train, Y_train), (X_test, Y_test) =  mnist.load_data()

# Shape of the numpy arrays
print(X_train.shape, Y_train.shape, X_test.shape, Y_test.shape)

plt.imshow(X_train[25])
plt.show()

# Unique values in Y_train
print(np.unique(Y_train))
# Unique values in Y_test
print(np.unique(Y_test))

# Scaling the values
X_train = X_train/255
X_test = X_test/255

# Setting up the layers of the Neural  Network
model = keras.Sequential([
            keras.layers.Flatten(input_shape=(28,28)),
            keras.layers.Dense(50, activation='relu'),
            keras.layers.Dense(50, activation='relu'),
            keras.layers.Dense(10, activation='sigmoid')])

# Compiling the Neural Network
model.compile(optimizer='adam',
                         loss = 'sparse_categorical_crossentropy',
                         metrics=['accuracy'])

# Training the Neural Network
model.fit(X_train, Y_train, epochs=20)

loss, accuracy = model.evaluate(X_test, Y_test)
print(accuracy)

# First data point in X_test
plt.imshow(X_test[0])
plt.show()

print(Y_test[0])

Y_pred = model.predict(X_test)
label_for_first_test_image = np.argmax(Y_pred[0])
print(label_for_first_test_image)

